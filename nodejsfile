node{
    
properties([[$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])
timestamps {
    // some block
}
try{   
stage('Checkout Code')
{
    notifyBuild("STARTED")
    git branch: 'dev', credentialsId: '67f47e78-6d7f-4815-b78e-28d0b96c3eec', url: 'https://github.com/puneeth-devops/nodejs-app-mss.git'
}
stage('Build')
{
    nodejs(nodeJSInstallationName: "nodejs18.5.0")
    {
        sh "npm install"
    }
}
stage('Create Sonar Report')
{
    nodejs(nodeJSInstallationName: "nodejs18.5.0")
    {
        sh "npm run sonar"
    }
}
stage('Upload Artifacts')
{
      sh "npm install"
}
stage('Deploy Applications')
{
      sh "npm start &"
}
} catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
